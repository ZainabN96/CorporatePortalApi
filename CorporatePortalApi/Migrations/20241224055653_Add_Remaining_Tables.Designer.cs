// <auto-generated />
using System;
using CorporatePortalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CorporatePortalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241224055653_Add_Remaining_Tables")]
    partial class Add_Remaining_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRole");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Address_ID")
                        .HasColumnType("int");

                    b.Property<int>("Address_ID1")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FirstPasswordChange")
                        .HasColumnType("bit");

                    b.Property<string>("Hometown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTwoFAEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Locale_ID")
                        .HasColumnType("int");

                    b.Property<int>("Locale_ID1")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID1")
                        .HasColumnType("int");

                    b.Property<int>("TimeZoneTime_Zone_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Time_Zone_ID")
                        .HasColumnType("int");

                    b.Property<string>("TwoFASecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Address_ID1");

                    b.HasIndex("Locale_ID1");

                    b.HasIndex("Tenant_ID1");

                    b.HasIndex("TimeZoneTime_Zone_ID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("RoleId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(1);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address", b =>
                {
                    b.Property<int>("Address_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Address_Coordinates")
                        .HasColumnType("geography");

                    b.Property<int?>("Address_Geography_ID")
                        .HasColumnType("int");

                    b.Property<string>("Address_Line_1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Address_Line_2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Address_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Postal_Zip_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("UDF_Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address_ID");

                    b.HasIndex("Address_Geography_ID");

                    b.HasIndex("Address_Type_Lkp_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Address");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address_Geography", b =>
                {
                    b.Property<int>("Address_Geography_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Geography_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Geography_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Geography_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Geography_Short_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Geography_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Parent_Geography_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.HasKey("Address_Geography_ID");

                    b.ToTable("TmX_Address_Geography");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Bank", b =>
                {
                    b.Property<int>("Bank_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bank_ID"));

                    b.Property<string>("Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Admin_To_Parent2_Sync")
                        .HasColumnType("bit");

                    b.Property<string>("Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank_Contact_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bypass_OTP_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Cloud_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cloud_Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cloud_Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Data_Sync_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Employment_Type_Hint")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Iframe_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Visible")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Parent1_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.Property<bool?>("Parent2_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.HasKey("Bank_ID");

                    b.ToTable("TmX_Bank");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.Property<int>("Corporate_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Corporate_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Corporate_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Bank_Account")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Email_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_NTN_Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Corporate_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Default_Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Corporate_Id");

                    b.HasIndex("Default_Product_Id");

                    b.ToTable("TmX_Corporate");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Currency", b =>
                {
                    b.Property<int>("Currency_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Currency_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency_Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Currency_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency_Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Currency_ID");

                    b.ToTable("TmX_Currency");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Locale", b =>
                {
                    b.Property<int>("Locale_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Locale_ID"));

                    b.Property<string>("Country_Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Locale_LCID")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Locale_ID");

                    b.ToTable("TmX_Locale");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Location", b =>
                {
                    b.Property<int>("Location_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Location_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Parent_Location_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.HasKey("Location_ID");

                    b.HasIndex("Location_Type_Lkp_ID");

                    b.HasIndex("Parent_Location_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Location");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Lookup", b =>
                {
                    b.Property<int>("Lookup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lookup_ID"));

                    b.Property<bool?>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Created_Date")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Hidden_Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Locale_ID")
                        .HasColumnType("int");

                    b.Property<string>("Locale_Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lookup_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lookup_Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Parent_Lookup_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Sort_Order")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_Editable")
                        .HasColumnType("int");

                    b.Property<string>("Visible_Value")
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.HasKey("Lookup_ID");

                    b.ToTable("TmX_Lookup");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ask_Bank_Details_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("Bank_Id")
                        .HasColumnType("int");

                    b.Property<string>("Company_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency_ID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Documentation_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Execute_Parser_Scorecard_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Group_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Individual_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Manual_Doc_Collection_Enabled_Flag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Max_Allowed_Loan_Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Max_Sub_Product_Count")
                        .HasColumnType("int");

                    b.Property<int?>("Monthly_Repayment_Due_Day")
                        .HasColumnType("int");

                    b.Property<bool>("Onboarded_Corportate_Employees")
                        .HasColumnType("bit");

                    b.Property<bool?>("PDC_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Payment_Allowed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Processing_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Product_Classification_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("Product_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Product_Tenure_Months")
                        .HasColumnType("int");

                    b.Property<int>("Product_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Frequency_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Mode_Lkp")
                        .HasColumnType("int");

                    b.Property<decimal?>("Service_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shortlisting_Rules_Lookup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("Workflow_Scheme_Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Product_ID");

                    b.HasIndex("Bank_Id");

                    b.HasIndex("Currency_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Product");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Tenant", b =>
                {
                    b.Property<int>("Tenant_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tenant_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tenant_Activation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Tenant_Blocked_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Tenant_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Tenant_Registration_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Tenant_ID");

                    b.ToTable("TmX_Tenants");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Time_Zone", b =>
                {
                    b.Property<int>("Time_Zone_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Time_Zone_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Time_Zone_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Time_Zone_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Time_Zone_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Time_Zone_ID");

                    b.ToTable("TmX_Time_Zone");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User", b =>
                {
                    b.Property<string>("User_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("Address_ID")
                        .HasColumnType("int");

                    b.Property<string>("Contact_Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Designation_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Middle_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Mobile_User_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Parent_User_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Primary_National_ID_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("Primary_National_Identifier_Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Server_Branch_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Server_User_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Time_Zone_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Image_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("User_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.HasKey("User_ID");

                    b.HasIndex("Address_ID");

                    b.HasIndex("Designation_Lkp_ID");

                    b.HasIndex("Location_ID");

                    b.HasIndex("Parent_User_ID");

                    b.HasIndex("Tenant_ID");

                    b.HasIndex("Time_Zone_ID");

                    b.HasIndex("User_Type_Lkp_ID");

                    b.ToTable("TmX_User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User_To_Corporate_Mapping", b =>
                {
                    b.Property<int>("User_To_Corporate_Mapping_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_To_Corporate_Mapping_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Corporate_Id")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_To_Corporate_Mapping_Id");

                    b.HasIndex("Corporate_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("TmX_User_To_Corporate_Mapping");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Time_Zone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("TimeZoneTime_Zone_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Locale");

                    b.Navigation("Tenant");

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUserRole", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.AspNetRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.AspNetUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address_Geography", "AddressGeography")
                        .WithMany()
                        .HasForeignKey("Address_Geography_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "AddressTypeLookup")
                        .WithMany()
                        .HasForeignKey("Address_Type_Lkp_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AddressGeography");

                    b.Navigation("AddressTypeLookup");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Product", "Default_Product")
                        .WithMany()
                        .HasForeignKey("Default_Product_Id");

                    b.Navigation("Default_Product");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Location", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "Location_Lookup")
                        .WithMany()
                        .HasForeignKey("Location_Type_Lkp_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Parent_Location")
                        .WithMany()
                        .HasForeignKey("Parent_Location_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location_Lookup");

                    b.Navigation("Parent_Location");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("Bank_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Currency");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "Designation")
                        .WithMany()
                        .HasForeignKey("Designation_Lkp_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "ParentUser")
                        .WithMany()
                        .HasForeignKey("Parent_User_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Time_Zone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("Time_Zone_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "UserType")
                        .WithMany()
                        .HasForeignKey("User_Type_Lkp_ID");

                    b.Navigation("Address");

                    b.Navigation("Designation");

                    b.Navigation("Location");

                    b.Navigation("ParentUser");

                    b.Navigation("Tenant");

                    b.Navigation("TimeZone");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User_To_Corporate_Mapping", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Corporate", "Corporate")
                        .WithMany()
                        .HasForeignKey("Corporate_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
