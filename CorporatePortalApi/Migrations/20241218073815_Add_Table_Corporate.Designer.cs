// <auto-generated />
using System;
using CorporatePortalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CorporatePortalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218073815_Add_Table_Corporate")]
    partial class Add_Table_Corporate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CorporatePortalApi.Models.TMX_Address", b =>
                {
                    b.Property<int>("Address_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<int>("AddressGeographyGeography_ID")
                        .HasColumnType("int");

                    b.Property<int>("AddressTypeLookupLookup_ID")
                        .HasColumnType("int");

                    b.Property<string>("Address_Coordinates")
                        .HasColumnType("geography");

                    b.Property<int?>("Address_Geography_ID")
                        .HasColumnType("int");

                    b.Property<string>("Address_Line_1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Address_Line_2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Address_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Postal_Zip_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID1")
                        .HasColumnType("int");

                    b.Property<string>("UDF_Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address_ID");

                    b.HasIndex("AddressGeographyGeography_ID");

                    b.HasIndex("AddressTypeLookupLookup_ID");

                    b.HasIndex("Tenant_ID1");

                    b.ToTable("TMX_Address");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TMX_Tenant", b =>
                {
                    b.Property<int>("Tenant_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tenant_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tenant_Activation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Tenant_Blocked_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Tenant_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Tenant_Registration_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Tenant_ID");

                    b.ToTable("TMX_Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address_Geography", b =>
                {
                    b.Property<int>("Geography_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Geography_ID"));

                    b.HasKey("Geography_ID");

                    b.ToTable("TmX_Address_Geography");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Bank", b =>
                {
                    b.Property<int>("Bank_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bank_ID"));

                    b.Property<string>("Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Admin_To_Parent2_Sync")
                        .HasColumnType("bit");

                    b.Property<string>("Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank_Contact_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bypass_OTP_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Cloud_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cloud_Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cloud_Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Data_Sync_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Employment_Type_Hint")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Iframe_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Visible")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Parent1_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.Property<bool?>("Parent2_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.HasKey("Bank_ID");

                    b.ToTable("TmX_Bank");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.Property<int>("Corporate_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Corporate_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Corporate_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Bank_Account")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Email_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_NTN_Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Corporate_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Default_Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Corporate_Id");

                    b.HasIndex("Default_Product_Id");

                    b.ToTable("TmX_Corporate");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Currency", b =>
                {
                    b.Property<int>("Currency_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Currency_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency_Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Currency_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency_Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Currency_ID");

                    b.ToTable("TmX_Currency");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Lookup", b =>
                {
                    b.Property<int>("Lookup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lookup_ID"));

                    b.HasKey("Lookup_ID");

                    b.ToTable("TmX_Lookup");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ask_Bank_Details_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("Bank_Id")
                        .HasColumnType("int");

                    b.Property<string>("Company_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency_ID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Documentation_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Execute_Parser_Scorecard_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Group_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Individual_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Manual_Doc_Collection_Enabled_Flag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Max_Allowed_Loan_Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Max_Sub_Product_Count")
                        .HasColumnType("int");

                    b.Property<int?>("Monthly_Repayment_Due_Day")
                        .HasColumnType("int");

                    b.Property<bool>("Onboarded_Corportate_Employees")
                        .HasColumnType("bit");

                    b.Property<bool?>("PDC_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Payment_Allowed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Processing_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Product_Classification_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("Product_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Product_Tenure_Months")
                        .HasColumnType("int");

                    b.Property<int>("Product_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Frequency_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Mode_Lkp")
                        .HasColumnType("int");

                    b.Property<decimal?>("Service_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shortlisting_Rules_Lookup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("Workflow_Scheme_Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Product_ID");

                    b.HasIndex("Bank_Id");

                    b.HasIndex("Currency_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Product");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TMX_Address", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address_Geography", "AddressGeography")
                        .WithMany()
                        .HasForeignKey("AddressGeographyGeography_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "AddressTypeLookup")
                        .WithMany()
                        .HasForeignKey("AddressTypeLookupLookup_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TMX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressGeography");

                    b.Navigation("AddressTypeLookup");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Product", "Default_Product")
                        .WithMany()
                        .HasForeignKey("Default_Product_Id");

                    b.Navigation("Default_Product");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("Bank_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TMX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Currency");

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
