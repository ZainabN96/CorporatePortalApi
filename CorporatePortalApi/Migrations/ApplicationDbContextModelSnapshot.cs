// <auto-generated />
using System;
using CorporatePortalApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CorporatePortalApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AspNetRole", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("Address_ID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("FirstPasswordChange")
                        .HasColumnType("bit");

                    b.Property<string>("Hometown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTwoFAEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Locale_ID")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Time_Zone_ID")
                        .HasColumnType("int");

                    b.Property<string>("TwoFASecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Address_ID");

                    b.HasIndex("Locale_ID");

                    b.HasIndex("Tenant_ID");

                    b.HasIndex("Time_Zone_ID");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<string>("RoleId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(1);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Account_Application", b =>
                {
                    b.Property<int>("Account_Application_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Account_Application_ID"));

                    b.Property<DateTime>("Account_Application_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Account_Number")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Balance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Account_Application_ID");

                    b.ToTable("TmX_Account_Application", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address", b =>
                {
                    b.Property<int>("Address_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Address_Coordinates")
                        .HasColumnType("geography");

                    b.Property<int?>("Address_Geography_ID")
                        .HasColumnType("int");

                    b.Property<string>("Address_Line_1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Address_Line_2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_3")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Address_Line_4")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Address_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Postal_Zip_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("UDF_Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Address_ID");

                    b.HasIndex("Address_Geography_ID");

                    b.HasIndex("Address_Type_Lkp_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Address", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address_Geography", b =>
                {
                    b.Property<int>("Address_Geography_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Address_Geography_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Geography_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Geography_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Geography_Short_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Geography_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Parent_Geography_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.HasKey("Address_Geography_ID");

                    b.ToTable("TmX_Address_Geography", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Bank", b =>
                {
                    b.Property<int>("Bank_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Bank_ID"));

                    b.Property<string>("Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Admin_To_Parent2_Sync")
                        .HasColumnType("bit");

                    b.Property<string>("Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bank_Contact_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Bank_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bypass_OTP_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Cloud_API_Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cloud_Admin_Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cloud_Admin_Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Data_Sync_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Employment_Type_Hint")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Iframe_Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Visible")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Parent1_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.Property<bool?>("Parent2_To_Admin_Sync")
                        .HasColumnType("bit");

                    b.HasKey("Bank_ID");

                    b.ToTable("TmX_Bank", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Company_Branch", b =>
                {
                    b.Property<int>("Customer_Branch_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Branch_Id"));

                    b.Property<string>("Branch_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Branch_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Branch_Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Branch_Type_Lkp")
                        .HasColumnType("int");

                    b.HasKey("Customer_Branch_Id");

                    b.ToTable("TmX_Company_Branch", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.Property<int>("Corporate_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Corporate_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Corporate_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Bank_Account")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Corporate_Email_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_Image")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Corporate_NTN_Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Corporate_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Corporate_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Default_Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Corporate_Id");

                    b.HasIndex("Default_Product_Id");

                    b.ToTable("TmX_Corporate", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Currency", b =>
                {
                    b.Property<int>("Currency_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Currency_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency_Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Currency_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Currency_Symbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Currency_ID");

                    b.ToTable("TmX_Currency", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Customer_Master", b =>
                {
                    b.Property<int>("Customer_Master_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_Master_Id"));

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Customer_Classification_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("Customer_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Customer_Email_Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Customer_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Customer_Phone_Number")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Customer_Segment_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_Status_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_Sub_Segment_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("Customer_Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Customer_Total_Limit")
                        .HasColumnType("decimal(18,9)");

                    b.Property<int?>("Customer_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("ETB_Flag")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Entity_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("FATCA_Class_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("FRMU_Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("Is_SA_User")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_Id")
                        .HasColumnType("int");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Multi_Site_Customer_Flag")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("NTI_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("National_ID_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("National_Identifier_Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Relationship_Code_Lkp")
                        .HasColumnType("int");

                    b.Property<bool?>("SA_User_Created")
                        .HasColumnType("bit");

                    b.Property<string>("SLS_Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Same_As_Above_Lkp")
                        .HasColumnType("int");

                    b.Property<decimal?>("Suggested_Loan_Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("Tenant_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Transaction_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("neg_area")
                        .HasColumnType("bit");

                    b.Property<bool?>("neg_customer")
                        .HasColumnType("bit");

                    b.Property<string>("udf_data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Customer_Master_Id");

                    b.HasIndex("Location_Id");

                    b.HasIndex("Tenant_Id");

                    b.HasIndex("Transaction_Id");

                    b.ToTable("TmX_Customer_Master", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Geofence", b =>
                {
                    b.Property<int>("Geofence_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Geofence_Id"));

                    b.Property<string>("Geofence_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Geofence_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Geofence_Id");

                    b.ToTable("TmX_Geofence", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Institute", b =>
                {
                    b.Property<int>("Institute_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Institute_ID"));

                    b.Property<string>("Institute_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Institute_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Institute_ID");

                    b.ToTable("TmX_Institute", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Loan_Application", b =>
                {
                    b.Property<int>("Loan_Application_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Loan_Application_ID"));

                    b.Property<decimal?>("Accumulated_Credit_Score")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Accumulative_Poverty_Score")
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("App_Version_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Application_Status_Lkp")
                        .HasColumnType("int");

                    b.Property<decimal?>("Approved_Loan_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Asset_Insurance_Premium_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("Channel_Reference_Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Client_Reference_Number")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Company_Branch_Id")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Currency_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Customer_Master_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Documentation_Fee")
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("Error")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Geofence_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Installment_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Insurance_Premium_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<bool?>("Is_Attached")
                        .HasColumnType("bit");

                    b.Property<int?>("Is_Nominee_Available")
                        .HasColumnType("int");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Loan_Application_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Loan_Application_Number")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Loan_Application_Submission_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Loan_Cycle")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Loan_Disbursement_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Loan_Disclosure_Report_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Loan_Maturity_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Loan_Product_Id")
                        .HasColumnType("int");

                    b.Property<string>("Loan_Purpose")
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.Property<int?>("Loan_Type")
                        .HasColumnType("int");

                    b.Property<int?>("Loan_Utilization_Check_Lkp")
                        .HasColumnType("int");

                    b.Property<DateTime?>("MW_Posted_Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Multiple_Loan_Indicator_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Order_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Other_Loan_Completion_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other_Loan_Institute_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Other_Loan_Outstanding_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Other_Loan_Total_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("Other_Loan_Usage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal?>("Overriden_Loan_Limit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("Overriden_Loan_Limit_Flag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Previous_Loan_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Previous_Psc_Score")
                        .HasColumnType("decimal(13,4)");

                    b.Property<Guid?>("Process_Instance_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Requested_Loan_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Service_Charges")
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("Status")
                        .HasColumnType("nchar(50)");

                    b.Property<decimal?>("Takaful_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<int>("Tenant_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Total_Installments")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total_Loan_Utilization")
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal?>("Total_Recieiveable_Amount")
                        .HasColumnType("decimal(13,4)");

                    b.Property<int?>("Total_Tenure")
                        .HasColumnType("int");

                    b.Property<decimal?>("Training_Fee")
                        .HasColumnType("decimal(13,4)");

                    b.Property<int?>("Type_Of_Screening_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("User_Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Utilization_Comments")
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.HasKey("Loan_Application_ID");

                    b.HasIndex("Company_Branch_Id");

                    b.HasIndex("Currency_Id");

                    b.HasIndex("Customer_Master_Id");

                    b.HasIndex("Geofence_Id");

                    b.HasIndex("Loan_Product_Id");

                    b.HasIndex("Order_ID");

                    b.HasIndex("Tenant_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("TmX_Loan_Application", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Loan_Application_Checklist", b =>
                {
                    b.Property<int>("Loan_Application_Checklist_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Loan_Application_Checklist_ID"));

                    b.Property<int?>("Account_Application_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Attachment_Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Attachment_Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image_Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Front_Side")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Loan_Application_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Loan_Product_Checklist_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Mobile_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Tab_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Verification_Outcome_Lkp")
                        .HasColumnType("int");

                    b.Property<bool?>("Verification_Required")
                        .HasColumnType("bit");

                    b.HasKey("Loan_Application_Checklist_ID");

                    b.HasIndex("Account_Application_ID");

                    b.HasIndex("Loan_Application_ID");

                    b.HasIndex("Loan_Product_Checklist_Id");

                    b.HasIndex("Location_ID");

                    b.HasIndex("Tab_ID");

                    b.HasIndex("Tenant_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("TmX_Loan_Application_Checklist", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Locale", b =>
                {
                    b.Property<int>("Locale_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Locale_ID"));

                    b.Property<string>("Country_Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Locale_LCID")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Locale_ID");

                    b.ToTable("TmX_Locale", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Location", b =>
                {
                    b.Property<int>("Location_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Location_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Parent_Location_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.HasKey("Location_ID");

                    b.HasIndex("Location_Type_Lkp_ID");

                    b.HasIndex("Parent_Location_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Location", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Lookup", b =>
                {
                    b.Property<int>("Lookup_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Lookup_ID"));

                    b.Property<bool?>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Created_Date")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Hidden_Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Locale_ID")
                        .HasColumnType("int");

                    b.Property<string>("Locale_Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lookup_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lookup_Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Parent_Lookup_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Sort_Order")
                        .HasColumnType("int");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int?>("User_Editable")
                        .HasColumnType("int");

                    b.Property<string>("Visible_Value")
                        .HasMaxLength(999)
                        .HasColumnType("nvarchar(999)");

                    b.HasKey("Lookup_ID");

                    b.ToTable("TmX_Lookup", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_ID"));

                    b.Property<DateTime?>("Accepted_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Cancelled_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Corporate_Id")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Customer_Master_ID")
                        .HasColumnType("int");

                    b.Property<string>("Delivered_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Delivered_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Dlp_Order_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Execute_Parser_Scorecard_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Executed_Rules_Json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expected_Degree_Completion_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Financing_Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Financing_Status_Lkp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Goods_Issuance_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Institute_Id")
                        .HasColumnType("int");

                    b.Property<bool?>("Is_Ecib_Evaluation_Successful")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Order_Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Order_Gross_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Order_Net_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Order_Number")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Product_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Rejected_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Student_Bill_Paid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Tax_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("UDF_Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Order_ID");

                    b.HasIndex("Corporate_Id");

                    b.HasIndex("Customer_Master_ID");

                    b.HasIndex("Institute_Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Order", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<bool?>("Ask_Bank_Details_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("Bank_Id")
                        .HasColumnType("int");

                    b.Property<string>("Company_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency_ID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Documentation_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Execute_Parser_Scorecard_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Group_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Individual_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Manual_Doc_Collection_Enabled_Flag")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Max_Allowed_Loan_Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Max_Sub_Product_Count")
                        .HasColumnType("int");

                    b.Property<int?>("Monthly_Repayment_Due_Day")
                        .HasColumnType("int");

                    b.Property<bool>("Onboarded_Corportate_Employees")
                        .HasColumnType("bit");

                    b.Property<bool?>("PDC_Flag")
                        .HasColumnType("bit");

                    b.Property<bool>("Payment_Allowed")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Processing_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Product_Classification_Lkp")
                        .HasColumnType("int");

                    b.Property<string>("Product_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Product_Tenure_Months")
                        .HasColumnType("int");

                    b.Property<int>("Product_Type_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Frequency_Lkp")
                        .HasColumnType("int");

                    b.Property<int?>("Repayment_Mode_Lkp")
                        .HasColumnType("int");

                    b.Property<decimal?>("Service_Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shortlisting_Rules_Lookup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<string>("Workflow_Scheme_Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Product_ID");

                    b.HasIndex("Bank_Id");

                    b.HasIndex("Currency_ID");

                    b.HasIndex("Tenant_ID");

                    b.ToTable("TmX_Product", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product_Checklist", b =>
                {
                    b.Property<int>("Product_Checklist_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product_Checklist_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Attachment_Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Product_Checklist_Id");

                    b.ToTable("TmX_Product_Checklist", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Tab", b =>
                {
                    b.Property<int>("Tab_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tab_Id"));

                    b.Property<string>("Tab_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tab_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Tab_Id");

                    b.ToTable("TmX_Tab", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Tenant", b =>
                {
                    b.Property<int>("Tenant_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tenant_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Tenant_Activation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Tenant_Blocked_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Tenant_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Tenant_Registration_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Tenant_ID");

                    b.ToTable("TmX_Tenants", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Time_Zone", b =>
                {
                    b.Property<int>("Time_Zone_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Time_Zone_ID"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Time_Zone_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Time_Zone_Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Time_Zone_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Time_Zone_ID");

                    b.ToTable("TmX_Time_Zone", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Transaction", b =>
                {
                    b.Property<int>("Transaction_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Transaction_Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Transaction_code")
                        .HasColumnType("int");

                    b.Property<string>("Transaction_desc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Transaction_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Transaction_Id");

                    b.ToTable("TmX_Transaction", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User", b =>
                {
                    b.Property<string>("User_ID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<int?>("Address_ID")
                        .HasColumnType("int");

                    b.Property<string>("Contact_Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Designation_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email_Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Middle_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Mobile_User_Flag")
                        .HasColumnType("bit");

                    b.Property<string>("Parent_User_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Primary_National_ID_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.Property<string>("Primary_National_Identifier_Value")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Server_Branch_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Server_User_ID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Tenant_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Time_Zone_ID")
                        .HasColumnType("int");

                    b.Property<string>("User_Image_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("User_Type_Lkp_ID")
                        .HasColumnType("int");

                    b.HasKey("User_ID");

                    b.HasIndex("Address_ID");

                    b.HasIndex("Designation_Lkp_ID");

                    b.HasIndex("Location_ID");

                    b.HasIndex("Parent_User_ID");

                    b.HasIndex("Tenant_ID");

                    b.HasIndex("Time_Zone_ID");

                    b.HasIndex("User_Type_Lkp_ID");

                    b.ToTable("TmX_User", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User_To_Corporate_Mapping", b =>
                {
                    b.Property<int>("User_To_Corporate_Mapping_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_To_Corporate_Mapping_Id"));

                    b.Property<bool>("Active_Flag")
                        .HasColumnType("bit");

                    b.Property<int>("Corporate_Id")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Effective_End_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Effective_Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Updated_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Last_Updated_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("User_To_Corporate_Mapping_Id");

                    b.HasIndex("Corporate_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("TmX_User_To_Corporate_Mapping", (string)null);
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("Locale_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Time_Zone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("Time_Zone_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Address");

                    b.Navigation("Locale");

                    b.Navigation("Tenant");

                    b.Navigation("TimeZone");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUserRole", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.AspNetRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.AspNetUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Address", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address_Geography", "AddressGeography")
                        .WithMany()
                        .HasForeignKey("Address_Geography_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "AddressTypeLookup")
                        .WithMany()
                        .HasForeignKey("Address_Type_Lkp_ID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AddressGeography");

                    b.Navigation("AddressTypeLookup");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Corporate", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Product", "Default_Product")
                        .WithMany()
                        .HasForeignKey("Default_Product_Id");

                    b.Navigation("Default_Product");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Customer_Master", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("Transaction_Id");

                    b.Navigation("Location");

                    b.Navigation("Tenant");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Loan_Application", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Company_Branch", "Company_Branch")
                        .WithMany()
                        .HasForeignKey("Company_Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Customer_Master", "Customer_Master")
                        .WithMany()
                        .HasForeignKey("Customer_Master_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Geofence", "Geofence")
                        .WithMany()
                        .HasForeignKey("Geofence_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Product", "Product")
                        .WithMany()
                        .HasForeignKey("Loan_Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Order", "Order")
                        .WithMany()
                        .HasForeignKey("Order_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id");

                    b.Navigation("Company_Branch");

                    b.Navigation("Currency");

                    b.Navigation("Customer_Master");

                    b.Navigation("Geofence");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Loan_Application_Checklist", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Account_Application", "Account_Application")
                        .WithMany()
                        .HasForeignKey("Account_Application_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Loan_Application", "Loan_Application")
                        .WithMany()
                        .HasForeignKey("Loan_Application_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Product_Checklist", "Product_Checklist")
                        .WithMany()
                        .HasForeignKey("Loan_Product_Checklist_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tab", "Tab")
                        .WithMany()
                        .HasForeignKey("Tab_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "User")
                        .WithMany()
                        .HasForeignKey("User_ID");

                    b.Navigation("Account_Application");

                    b.Navigation("Loan_Application");

                    b.Navigation("Location");

                    b.Navigation("Product_Checklist");

                    b.Navigation("Tab");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Location", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "Location_Lookup")
                        .WithMany()
                        .HasForeignKey("Location_Type_Lkp_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Parent_Location")
                        .WithMany()
                        .HasForeignKey("Parent_Location_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location_Lookup");

                    b.Navigation("Parent_Location");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Order", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Corporate", "Corporate")
                        .WithMany()
                        .HasForeignKey("Corporate_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Customer_Master", "CustomerMaster")
                        .WithMany()
                        .HasForeignKey("Customer_Master_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Institute", "Institute")
                        .WithMany()
                        .HasForeignKey("Institute_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporate");

                    b.Navigation("CustomerMaster");

                    b.Navigation("Institute");

                    b.Navigation("Product");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_Product", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("Bank_Id");

                    b.HasOne("CorporatePortalApi.Models.TmX_Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("Currency_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Currency");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Address", "Address")
                        .WithMany()
                        .HasForeignKey("Address_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "Designation")
                        .WithMany()
                        .HasForeignKey("Designation_Lkp_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "ParentUser")
                        .WithMany()
                        .HasForeignKey("Parent_User_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("Tenant_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_Time_Zone", "TimeZone")
                        .WithMany()
                        .HasForeignKey("Time_Zone_ID");

                    b.HasOne("CorporatePortalApi.Models.TmX_Lookup", "UserType")
                        .WithMany()
                        .HasForeignKey("User_Type_Lkp_ID");

                    b.Navigation("Address");

                    b.Navigation("Designation");

                    b.Navigation("Location");

                    b.Navigation("ParentUser");

                    b.Navigation("Tenant");

                    b.Navigation("TimeZone");

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.TmX_User_To_Corporate_Mapping", b =>
                {
                    b.HasOne("CorporatePortalApi.Models.TmX_Corporate", "Corporate")
                        .WithMany()
                        .HasForeignKey("Corporate_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CorporatePortalApi.Models.TmX_User", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Corporate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CorporatePortalApi.Models.AspNetUser", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
